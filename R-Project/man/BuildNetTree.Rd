% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildNetTree.R
\name{BuildNetTree}
\alias{BuildNetTree}
\title{RerF Similarity Tree Generator}
\usage{
BuildNetTree(
  X,
  Y,
  FUN,
  paramList,
  min.parent,
  max.depth,
  bagging,
  replacement,
  stratify,
  store.oob,
  store.impurity,
  progress,
  rotate,
  eps,
  honesty
)
}
\arguments{
\item{X}{an n by d numeric matrix (preferable) or data frame. The rows correspond to observations and columns correspond to features.}

\item{Y}{an n-by-n unweighted symmetric adjacency matrix.  Entries must be 0 or 1.}

\item{FUN}{a function that creates the random projection matrix.}

\item{paramList}{parameters in a named list to be used by FUN. If left unchanged,
default values will be populated, see \code{\link[rerf]{defaults}} for details.}

\item{min.parent}{the minimum splittable node size.  A node size < min.parent will be a leaf node. (min.parent = 6)}

\item{max.depth}{the longest allowable distance from the root of a tree to a leaf node (i.e. the maximum allowed height for a tree).  If max.depth=0, the tree will be allowed to grow without bound.}

\item{bagging}{a non-zero value means a random sample of X will be used during tree creation.  If replacement = FALSE the bagging value determines the percentage of samples to leave out-of-bag.  If replacement = TRUE the non-zero bagging value is ignored.}

\item{replacement}{if TRUE then n samples are chosen, with replacement, from X.}

\item{stratify}{if TRUE then class sample proportions are maintained during the random sampling.  Ignored if replacement = FALSE.}

\item{store.oob}{if TRUE then the samples omitted during the creation of a tree are stored as part of the tree.  This is required to run OOBPredict().}

\item{store.impurity}{if TRUE then the reduction in Gini impurity is stored for every split. This is required to run FeatureImportance().}

\item{progress}{if true a pipe is printed after each tree is created.  This is useful for large datasets.}

\item{rotate}{if TRUE then the data matrix X is uniformly randomly rotated.}

\item{eps}{a scalar between 0 and 1. A leaf node is designated if the mean node similarity is at least 1 - eps.}

\item{honesty}{if TRUE then OOB samples will be used for local leaf node estimates.}
}
\value{
Tree
}
\description{
Creates a single decision tree based on an input feature matrix and n-by-n graph node similarity matrix.  This is the function used by rerf to generate trees.
The task is to infer links between nodes in a network, given node attributes. Trees are constructed using a node cosine similarity matrix. Predictions are made using the Adjacency matrix.
}
\examples{

x <- matrix(c(0, -1, 1), nrow = 3L)
y <- matrix(c(1, 0, 0, 0, 1, 1, 0, 1, 1), nrow = 3L)
# BuildSimTree(x, y, RandMatBinary, p = 1L, d = 1L, rho = 1, prob = 1)
}
